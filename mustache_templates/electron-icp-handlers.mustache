import { ipcMain } from 'electron';
import * as sdkWrapper from './sailpoint-sdk';
import * as sdk from 'sailpoint-api-client';
import { apiConfig } from '../authentication/auth';

export function setupSailPointSDKHandlers() {

{{#apiInfo}}{{#apis}}
{{#operations}}
{{#operation}}
{{#useSingleRequestParameter}}
ipcMain.handle('{{#lambda.kebabcase}}{{nickname}}{{/lambda.kebabcase}}', async (event, {{#allParams.0}}request: sdk.{{classname}}{{operationIdCamelCase}}Request{{^hasRequiredParams}} = {}{{/hasRequiredParams}}{{/allParams.0}}) => {
    return await sdkWrapper.{{nickname}}({{#allParams.0}}request, apiConfig{{/allParams.0}}{{^allParams.0}}apiConfig{{/allParams.0}});
});
{{/useSingleRequestParameter}}
{{/operation}}
{{/operations}}
{{/apis}}{{/apiInfo}}

ipcMain.handle('generic-get', async(event, request: sdk.DefaultApiGenericGetRequest) => {
    return await sdkWrapper.genericGet(request, apiConfig);
});

ipcMain.handle('generic-post', async(event, request: sdk.DefaultApiGenericPostRequest) => {
    return await sdkWrapper.genericPost(request, apiConfig);
});

ipcMain.handle('generic-put', async(event, request: sdk.DefaultApiGenericPutRequest) => {
    return await sdkWrapper.genericPut(request, apiConfig);
});

ipcMain.handle('generic-patch', async(event, request: sdk.DefaultApiGenericPatchRequest) => {
    return await sdkWrapper.genericPatch(request, apiConfig);
});

ipcMain.handle('generic-delete', async(event, request: sdk.DefaultApiGenericDeleteRequest) => {
    return await sdkWrapper.genericDelete(request, apiConfig);
});

}