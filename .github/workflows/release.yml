name: 'Release'

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  version:
    name: Tag and create GitHub release from package.json version
    runs-on: ubuntu-22.04
    outputs:
      published: ${{ steps.publish.outputs.published }}
      version: ${{ steps.vars.outputs.version }}
      tag: ${{ steps.vars.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'

      - name: Ensure jq is available
        shell: bash
        run: |
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y jq
          fi

      - name: Read version from package.json
        id: vars
        shell: bash
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          if [[ "$VERSION" == *-* ]]; then echo "prerelease=true" >> $GITHUB_OUTPUT; else echo "prerelease=false" >> $GITHUB_OUTPUT; fi

      - name: Configure Git
        shell: bash
        run: |
          git config user.name "developer-relations-sp"
          git config user.email "devrel-service@sailpoint.com"

      - name: Check if tag exists
        id: check_tag
        shell: bash
        run: |
          git fetch --tags
          if git rev-parse -q --verify "refs/tags/${{ steps.vars.outputs.tag }}" >/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Sync app/package.json version to root version
        if: steps.check_tag.outputs.exists == 'false'
        shell: bash
        run: |
          tmpfile=$(mktemp)
          jq --arg v "${{ steps.vars.outputs.version }}" '.version=$v' app/package.json > "$tmpfile"
          mv "$tmpfile" app/package.json
          if ! git diff --quiet -- app/package.json; then
            git add app/package.json
            git commit -m "chore(release): sync app/package.json version to ${{ steps.vars.outputs.version }}"
            git remote set-url origin https://${{ secrets.SERVICE_TOKEN }}@github.com/sailpoint-oss/ui-development-kit.git
            git push --force origin main
          else
            echo "app/package.json already in sync"
          fi

      - name: Create tag
        if: steps.check_tag.outputs.exists == 'false'
        shell: bash
        run: |
          git tag -a "${{ steps.vars.outputs.tag }}" -m "Release ${{ steps.vars.outputs.tag }}"
          git remote set-url origin https://${{ secrets.SERVICE_TOKEN }}@github.com/sailpoint-oss/ui-development-kit.git
          git push origin "${{ steps.vars.outputs.tag }}"

      - name: Create GitHub Release
        if: steps.check_tag.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: ${{ steps.vars.outputs.tag }}
          generate_release_notes: true
          draft: true
          prerelease: ${{ steps.vars.outputs.prerelease }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set published output
        id: publish
        shell: bash
        run: |
          if [ "${{ steps.check_tag.outputs.exists }}" = "false" ]; then
            echo "published=true" >> $GITHUB_OUTPUT
          else
            echo "published=false" >> $GITHUB_OUTPUT
          fi

  build-and-publish:
    needs: version
    if: needs.version.outputs.published == 'true'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ needs.version.outputs.tag }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Install platform deps (Linux-only)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Install Angular CLI Globally
        run: npm install -g @angular/cli

      - name: Build and Publish artifacts to GitHub Release
        env:
          NODE_OPTIONS: "--max-old-space-size=8192"
          GH_TOKEN: ${{ secrets.SERVICE_TOKEN }}
        run: npm run build:publish -- --publish=always